<html custom-frame=solid-with-shadow window-resizable>
<head>
    <title>noteCali settings</title>
    <style>
        @font-face {
            font-family: inria-sans;
            src: url('inria-sans.otf');
        }

        @font-face {
            font-family: inria-sans-b;
            src: url('inria-sans-bold.otf');
        }

        body {
            var(mainColor): #788e9c;
        }

        body {
            margin: 0;
            overflow: hidden;
            font-family: inria-sans;
            color: white;
        }


        #titleBar {
            width: 100%;
            height: 25px;
            background-color: #676767;
        }

        #botomSection {
            flow: horizontal;
            width: 100%;
            height: calc(100vh - 25px);
        }

        #categoriMenu {
            width: 150px;
            height: 100%;
            background-color: var(mainColor);
        }

        #styleIcon {
            margin: 20px 1* 20px 1*;
            width: 60px;
            height: 60px;
        }

        button {
            width: 30px;
            height: 100%;
            display: block;
            background: none;
            border: none;
            padding: 0;
        }

            button:hover {
                background-color: #6caeeb;
                border: 2px solid #4f82b2;
            }

            button:focus {
                background-color: #5b92c5;
                border: 2px solid #4f82b2;
            }

        .tabButton {
            height: 35px;
            width: 86%;
            margin: 5px 7%;
            flow: horizontal;
            background-color: #d9d9d9;
            border-radius: 10px;
            border: 2px solid #cacaca;
        }

            .tabButton img {
                display: inline-block;
                height: 30px;
                margin: 1* 2px 1* 2px;
            }

        .CLabel {
            display: inline-block;
            margin: 1* 1* 1* 1*;
            font-family: inria-sans-b;
            font-size: 16px;
        }


        #bottomMenu {
            margin-top: 1*;
            padding-bottom: 5px;
        }

        #closeB {
            margin-left: 1*;
            display: inline-block;
            width: 25px;
            border: none;
        }

            #closeB img {
                width: 100%;
                height: 100%;
                filter: invert(100%);
            }

            #closeB:hover, #closeB:focus {
                background-color: none;
            }



        #titleName {
            display: inline-block;
            width: clac(100% - 20px);
            height: 100%;
            font-size: 15px;
            font-family: inria-sans-b;
            color: white;
            margin: 0 0 0 10px;
        }





        switch {
            margin-left: 1*;
            behavior: check;
            flow: text;
            width: 40px;
            height: 25px;
            overflow: hidden;
            border: 2px solid #d9d9d9;
            border-radius: 20px;
            background-image: url(switch.png);
            background-position: -15px 2px;
            background-size: 42px 25px;
            background-repeat: no-repeat;
            transition: background-position 0.02s linear 0s;
        }

            switch:checked {
                background-position: 0 2px;
            }

            switch:focus {
                border: 2px solid #c9c9c9;
            }

        .option {
            padding: 4px 4px;
            margin: 4px;
            display: inline-block;
            background-color: #aebcc3;
            border-radius: 15px;
            flow: horizontal;
            width: 220px;
            cursor: pointer;
        }

        .oLable {
            margin: 1* 0 1* 0;
            font-size: 15px;
            padding: 0px 8px;
        }

            .oLable.oLong {
                font-size: 12px;
            }


        .tabArea {
            margin-left: 1*;
            height: 100%;
            width: calc(100% - 150px);
            background-color: #d9d9d9;
        }

        #tabWithToolTip {
            width: calc(100% - 150px);
            background-color: #d9d9d9;
        }

            #tabWithToolTip .tabArea {
                width: 100%;
            }

        #settingsArea {
            padding: 0;
            width: 100%;
            flow: horizontal-flow;
            horizontal-align: center;
        }

        .toolTip {
            margin: 20px 10px;
            height: 120px;
            width: calc(100% - 20px);
            background-color: #aebcc3;
            border-radius: 15px;
            color: white;
        }

            .toolTip .header {
                width: 100%;
                text-align: center;
                padding: 4px 0;
                font-size: 18px;
            }

            .toolTip .tip {
                width: 100%;
                text-align: center;
                display: inline-block;
                font-size: 14px;
            }

        #uptudateBanner {
            flow: horizontal;
            min-width: 270px;
            background-color: #92c680;
            border-radius: 15px;
            white-space: nowrap;
            margin: 15px 1*;
            font-size: 20px;
            color: white;
            border: 2px solid #b4c9ad;
        }

            #uptudateBanner .version {
                margin: 1* 20px 1* 1*;
            }

            #uptudateBanner .msg {
                margin: 1*;
            }

            #uptudateBanner img {
                filter: invert(1);
            }

        #versionTitle {
            flow: horizontal;
            color: white;
            background-color: #aebcc3;
            margin: 0 25px;
            width: calc(100% - 50px);
            border-radius: 15px;
            font-size: 20px;
        }

            #versionTitle .version {
                margin: 0 1* 0 25px;
            }

            #versionTitle .type {
                margin: 0 25px 0 1*;
            }

        #versionLog {
            background-color: #aebcc3;
            border-radius: 10px;
            font-size: 18px;
            margin: 5px 30px;
            width: calc(100% - 100px);
            padding: 5px 20px;
            white-space: pre-wrap;
        }

        textarea:focus, input:focus {
            outline: none;
        }

        .inputElement {
            background-color: #aebcc3;
            color: white;
            border: 2px solid #7b99a9;
            border-radius: 10px;
            padding: 2px;
            overflow-y: hidden;
            font-size: 16px;
            font-weight: bold;
        }

        #TopicName {
            margin: 25px 1* 0 1*;
            width: calc(100% - 50px);
        }

        #TopicContent {
            margin: 5px 35px;
            width: calc(100% - 70px);
            height: calc(100% - 200px);
            text-align: left;
        }

        #TopicSendButton {
            margin: 1* 1* 20px 1*;
            background-color: #aebcc3;
            color: white;
            border-radius: 10px;
            padding: 2px;
            font-size: 18px;
            font-weight: bold;
            text-align: center;
            width: 100px;
        }

        #TopicImage {
            margin: 2px 1*;
            width: 150px;
            background-color: #aebcc3;
            color: white;
            border-radius: 10px;
            padding: 4px;
            font-size: 20px;
            font-weight: bold;
            text-align: center;
            white-space: nowrap;
        }

        #Email {
            margin: 2px 1*;
            width: calc(100% - 50px);
        }

        .var {
            background-color: #94a9b5;
            border-radius: 10px;
            flow: horizontal;
            width: calc(100% - 20px);
            color: white;
            font-size: 16px;
            margin: 5px 1*;
        }

            .var .name {
                background-color: #678ba0;
                border-radius: 12px;
                padding: 1* 5px;
                width: 80px;
                text-align: center;
            }

            .var .inputs {
                background-color: #678ba0;
                border-radius: 12px;
                padding: 1* 2px;
                margin: 0 2px;
                width: 15px;
                text-align: center;
            }

            .var .value {
                margin: 1* 1*;
            }

            .var .destroy {
                background-color: #678ba0;
                border-radius: 12px;
                padding: 2px 4px;
                width: 20px;
            }

        #varAddBTN {
            padding: 10px;
            background-color: #678ba0;
            width: 40px;
            border-radius: 20px;
            margin: 20px 1*;
        }




        #pickerSelection {
            width: 100%;
            height: calc(100vh - 25px);
            backdrop-filter: blur(10px);
            position: absolute;
            top: 25px;
            left: 0;
            display: none;
        }

        .colorpicker { /* element in settings box that open color picker */
            margin-left: 1*;
            width: 30px;
            height: 25px;
            border: 2px solid #d9d9d9;
            border-radius: 10px;
        }

        .numInput {
            margin-left: 1*;
            border: 2px solid #d9d9d9;
            border-radius: 10px;
        }

        #ColorPicker {
            margin: 1*;
            display: flex;
            backdrop-filter: none;
            background: #788e9c;
            border-radius: 20px;
            width: 300px;
            height: 200px;
            padding: 15px;
        }

            #ColorPicker .rSide {
                position: relative;
                display: inline-block;
                border-radius: 6px;
                width: 150px;
                height: 150px;
                flow: vertical;
            }


        .gradientPicker {
            position: relative;
            display: inline-block;
            border-radius: 6px;
            width: 150px;
            height: 150px;
        }

            .gradientPicker * {
                top: 0;
                position: absolute;
                width: 100%;
                height: 100%;
                border-radius: 6px;
            }

        #sg { /*second layer*/
            background: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%,rgba(0, 0, 0, 1) 100%);
        }

        .testGradi .fg { /*first layer*/
            background: linear-gradient(0deg, rgba(255, 255, 255, 1) 0%,rgba(255, 255, 255, 0) 100%);
        }

        #bcg { /*background color layer*/
            background-color: hsl(180,100,50);
        }

        #hueSlider {
            border: 2px solid #505f69;
            padding: 0;
            margin: 7px 0;
            height: 15px;
            width: 300px;
            border-radius: 6px;
            background: linear-gradient(0deg, rgba(255, 0, 0, 1) 0%, rgba(255, 255, 0, 1) 17%, rgba(0, 255, 0, 1) 33%,rgba(0, 255, 255, 1) 50%,rgba(0, 0, 255, 1) 67%,,rgba(255, 0, 255, 1) 83%,rgba(255, 0, 0, 1) 100%);
        }

            #hueSlider > button {
                width: 5px;
                height: 14px;
                background: transparent;
                outline: 1px solid black;
                border: 3px solid white;
            }

        #transparencitySlider {
            padding: 0;
            margin: 2px 0;
            height: 10px;
            border-radius: 6px;
            width: 128px;
            background: linear-gradient(0deg, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0) 100%);
            border: 2px solid #505f69;
        }

            #transparencitySlider > button {
                width: 5px;
                height: 14px;
                background: transparent;
                outline: 1px solid black;
                border: 3px solid white;
            }

        #lss { /* left side of picker*/
            flow: vertical-wrap;
            height: 150px;
        }

        #rss { /* right side of picker*/
            margin: 0 20px 0 0;
        }

        #colorTInput { /* show text*/
            width: 130px;
            height: 40px;
            margin: 5px 0;
            padding: 0;
            height: 20px;
            border-radius: 6px;
            background-color: #d9d9d9;
            text-align: center;
        }

        .colorPrewContainer {
            position: relative;
            width: 70px;
            margin: 15px 1*;
            height: 70px;
        }

        #colorPrew {
            position: absolute;
            top: 0;
            width: 100%;
            height: 100%;
            border-radius: 6px;
            background-color: hsl(180,100,50);
        }

        .colorPrewBackground {
            position: absolute;
            top: 0;
            width: 100%;
            height: 100%;
            border-radius: 7px;
            background-image: url(transpa.png);
        }

        #colorTop {
            display: inline-block;
            flow: horizontal;
        }

        #btnBottom {
            height: 30px;
            flow: horizontal;
        }

            #btnBottom button {
                width: 50px;
                height: 20px;
                margin: 0 1*;
                border-radius: 6px;
                padding: 0px 5px;
                background-color: #d9d9d9;
                border: 2px solid #adacac;
            }

                #btnBottom button:hover {
                    border: 2px solid #9ac2e3;
                }

        #dragDot {
            width: 10px;
            height: 10px;
            border-radius: 10px;
            border: solid black 1px;
        }

        .numInput {
            background-color:#D9D9D9;
            height:25px;
        }

        .numInput input > button {
            display: none;
            background-color:yellow;
            height:25px;
        }

        .numInput input {
            text-align: center;
            display: inline;
            padding:0;
            margin:0;
            border:0;
            
        }

            .numInput input > caption {
                border-radius: 5px;
                padding: 0;
                color: white;
                font-size: 18px;
                margin: 0;
                line-height: 25px; /*tohle je mrdka odskakuje celí blok když je víc než 0*/
                border: 0;
                width: 40px;
                height: 26px;
                background-color: #2B6CA8;
                position:relative;
                bottom:5px;
            }

        .rUpB, .rDwnB  { /*not work*/
           /*background-color: rgba(255, 0, 0, 1);*/
        } /*not work*/


            .rUpB img, .rDwnB img { /*not work*/
                height: 15px;
                padding: 5px 0;
                filter: invert(0);
                /*background-color: rgba(255, 0, 0, 1);*/
            }
        /*not work*/

    </style>

    <script>
        var f = Window.this.SettingsWin;

        Window.this.on("size", function () { document.getElementById("styleIcon").style.height = (document.offsetWidth < 200) ? "0" : "60px"; });

        function hsv_to_hsl(h, s, v) { var l = (2 - s) * v / 2; if (l != 0) { if (l == 1) { s = 0; } else if (l < 0.5) { s = s * v / (l * 2); } else { s = s * v / (2 - l * 2); } } return [h, s, l]; }
        function hslToHex(h, s, l) { l /= 100; const a = s * Math.min(l, 1 - l) / 100; const f = n => { const k = (n + h / 30) % 12; const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1); return Math.round(255 * color).toString(16).padStart(2, '0'); }; return `#${f(0)}${f(8)}${f(4)}`; }


        function hideseTs() {
            document.getElementById("seT").style.display = "none";
            document.getElementById("interfaceTab").style.display = "none";
            document.getElementById("systemTab").style.display = "none";
            document.getElementById("variablesTab").style.display = "none";
            document.getElementById("functionsTab").style.display = "none";
            document.getElementById("feedbackTab").style.display = "none";
            document.getElementById("updatesTab").style.display = "none";
            document.getElementById("tabWithToolTip").style.display = "none";
        }


        document.getElementById("styleBtn").onclick = function () { hideseTs(); document.getElementById("seT").style.display = "block"; document.getElementById("tabWithToolTip").style.display = "block"; }
        document.getElementById("interfaceBtn").onclick = function () { hideseTs(); document.getElementById("interfaceTab").style.display = "block"; document.getElementById("tabWithToolTip").style.display = "block"; }
        document.getElementById("systemBtn").onclick = function () { hideseTs(); document.getElementById("systemTab").style.display = "block"; document.getElementById("tabWithToolTip").style.display = "block"; }
        document.getElementById("variableBtn").onclick = function () { hideseTs(); document.getElementById("variablesTab").style.display = "block"; document.getElementById("tabWithToolTip").style.display = "block"; }
        document.getElementById("functionBtn").onclick = function () { hideseTs(); document.getElementById("functionsTab").style.display = "block"; document.getElementById("tabWithToolTip").style.display = "block"; }
        document.getElementById("feedbackBtn").onclick = function () { hideseTs(); document.getElementById("feedbackTab").style.display = "block"; }
        document.getElementById("updatesBtn").onclick = function () { hideseTs(); document.getElementById("updatesTab").style.display = "block" }


        function setStyleToolTip(description, name) {
            document.getElementById("toolTip").getElementsByClassName("tip")[0].innerHTML = description;
            document.getElementById("toolTip").getElementsByClassName("header")[0].innerHTML = name;
        };


        document.getElementById("hideAppName").onmouseover = function () { setStyleToolTip("Just hide app name", "Hide app name"); }
        document.getElementById("Transparencity").onmouseover = function () { setStyleToolTip("Allow transparencity for background color. Transparencity level is driven by backgroundColor property", "Transparencity"); }
        document.getElementById("BackgroundColor").onmouseover = function () { setStyleToolTip("Set background Color. Transparencity not work if Transperencity option is not turned on", "Background Color"); }
        document.getElementById("BackgroundImage").onmouseover = function () { setStyleToolTip("Image used for background. \n !solid color is alwys faster that image!", "Background Image"); }
        document.getElementById("ErrorHighlite").onmouseover = function () { setStyleToolTip("Color of error highliting", "Error High lite"); }
        document.getElementById("VariableHighlite").onmouseover = function () { setStyleToolTip("Color of variable highliting", "Variable Highlite"); }
        document.getElementById("SuperLineHighlite").onmouseover = function () { setStyleToolTip("Color used for highliting superline if is turned off all lines are superlines", "Super Line Highlite"); }

        function settingsDefaultToolTip() {
            document.getElementById("toolTip").getElementsByClassName("tip")[0].innerHTML = "Here is style settings";
            document.getElementById("toolTip").getElementsByClassName("header")[0].innerHTML = "Style";
        }

        document.getElementById("hideAppName").onmouseleave = settingsDefaultToolTip;
        document.getElementById("Transparencity").onmouseleave = settingsDefaultToolTip;
        document.getElementById("BackgroundColor").onmouseleave = settingsDefaultToolTip;
        document.getElementById("BackgroundImage").onmouseleave = settingsDefaultToolTip;
        document.getElementById("ErrorHighlite").onmouseleave = settingsDefaultToolTip;
        document.getElementById("VariableHighlite").onmouseleave = settingsDefaultToolTip;
        document.getElementById("SuperLineHighlite").onmouseleave = settingsDefaultToolTip;

        var options = document.getElementsByClassName("option");
        for (let i = 0; i < options.length; i++) {
            options[i].addEventListener("click", (e) => {
                var sw = e.currentTarget.getElementsByClassName("inp")[0];
                console.log(e.target.tagName);
                if (e.target.tagName != "SWITCH") { sw.checked = !sw.checked; }
            }, false);
        }

        var pickers = document.getElementsByClassName("colorpicker");
        for (let i = 0; i < pickers.length; i++) {
            pickers[i].addEventListener("click", (e) => {
                console.log("cc");
                document.getElementById("pickerSelection").style.display = "block";
            }, false);
        }


        function addToNumInput(inputObject, amount) {
            if (inputObject.value == undefined) {
                inputObject.value = 0;
            } else {
                inputObject.value = inputObject.value + amount;
            }

        }

        var numberDecreasers = document.getElementsByClassName("rDwnB");
        for (let i = 0; i < numberDecreasers.length; i++) {
            numberDecreasers[i].addEventListener("click", (e) => {
                addToNumInput(e.target.parentElement.parentElement.getElementsByTagName("input")[0],-0.5);
                console.log(e.target.parentElement.parentElement.getElementsByTagName("input")[0].value);
            }, false);
        }

        var numberIncresers = document.getElementsByClassName("rUpB");
        for (let i = 0; i < numberDecreasers.length; i++) {
            numberIncresers[i].addEventListener("click", (e) => {
                addToNumInput(e.target.parentElement.parentElement.getElementsByTagName("input")[0], 0.5);
                console.log(e.target.parentElement.parentElement.getElementsByTagName("input")[0].value);
            }, false);
        }



        document.getElementById("pickingDone").onclick = function () { document.getElementById("pickerSelection").style.display = "none"; }



        var isMouseDown = false;

        document.getElementById("sg").addEventListener('mousedown', function () {
            isMouseDown = true;
        }, true);

        document.addEventListener('mouseup', function () {
            isMouseDown = false;
        }, true);



        var lastH, lastS, lastL, lastA;

        function setColot() {
            var color = hsv_to_hsl(document.getElementById("hueSlider").value / 360, Math.floor(lastS) / 100, Math.floor(lastL) / 100);
            document.getElementById("colorPrew").style.background = "hsl(" + color[0] * 360 + ", " + color[1] * 100 + ", " + color[2] * 100 + ")";
            document.getElementById("colorPrew").style.opacity = document.getElementById("transparencitySlider").value / 100;
            document.getElementById("colorTInput").value = hslToHex(color[0] * 360, color[1] * 100, color[2] * 100);
        }

        document.getElementById("sg").addEventListener("mousemove", (e) => {
            if (isMouseDown) {
                var yclick = e.clientY - document.getElementById("sg").getBoundingClientRect().top;
                var xclick = e.clientX - document.getElementById("sg").getBoundingClientRect().left;
                document.getElementById("dragDot").style.marginTop = yclick - 5;
                document.getElementById("dragDot").style.marginLeft = xclick - 5;

                lastL = 100 - yclick / document.getElementById("sg").getBoundingClientRect().height * 100;
                lastS = (xclick / document.getElementById("sg").getBoundingClientRect().width) * 100;
                setColot();
            }
        }, false);

        document.getElementById("hueSlider").addEventListener("change", function (evt) {
            document.getElementById("bcg").style.background = "hsl(" + document.getElementById("hueSlider").value + ", 100%, 50%)";
            setColot();
        });

        document.getElementById("transparencitySlider").addEventListener("change", function (evt) {
            setColot();
        });

    </script>

</head>
<body>
    <div id="titleBar" role="window-caption">
        <div id="titleName">NoteCali Settings</div>
        <button id="closeB" role="window-minimize"><img src="close.svg" /></button>
    </div>
    <div id="pickerSelection">
        <div id="ColorPicker">
            <div id="colorTop">
                <div id="rss">
                    <div class="colorPrewContainer">
                        <div class="colorPrewBackground"></div>
                        <div id="colorPrew"></div>
                    </div>
                    <input type="text" id="colorTInput"></input>
                    <input type="hslider" id="transparencitySlider" max="100" value="100" step="1" />
                </div>
                <div id="lss">
                    <div class="gradientPicker">
                        <div id="bcg"></div>
                        <div class="fg"></div>
                        <div id="sg">
                            <div id="dragDot"></div>
                        </div>
                    </div>

                </div>
            </div>
            <input type="hslider" id="hueSlider" max="359" value="180" step="1" />
            <div id="btnBottom">
                <button>Save</button>
                <button id="pickingDone">Cancel</button>
            </div>
        </div>
    </div>

    <div id="botomSection">
        <div id="categoriMenu">
            <img id="styleIcon" src="filter.svg" />
            <button class="tabButton" id="styleBtn">
                <img src="color-palette.svg" />
                <div class="CLabel">Style</div>
            </button>
            <button class="tabButton" id="interfaceBtn">
                <img src="keyboard.svg" />
                <div class="CLabel">Interface</div>
            </button>
            <button class="tabButton" id="systemBtn">
                <img src="gear.svg" />
                <div class="CLabel">System</div>
            </button>
            <button class="tabButton" id="variableBtn">
                <img src="variable.svg" />
                <div class="CLabel">Variables</div>
            </button>
            <button class="tabButton" id="functionBtn">
                <img src="functions.svg" />
                <div class="CLabel">Functions</div>
            </button>

            <div id="bottomMenu">
                <button class="tabButton" id="feedbackBtn">
                    <img src="feedback.svg" />
                    <div class="CLabel">FeedBack</div>
                </button>
                <button class="tabButton" id="updatesBtn">
                    <img src="update.svg" />
                    <div class="CLabel">Updates</div>
                </button>
            </div>
        </div>

        <div id="tabWithToolTip">
            <div id="toolTip" class="toolTip">
                <div class="header">Style</div>
                <div class="tip">Here is style settings</div>
            </div>

            <div class="tabArea" id="seT">
                <div id="settingsArea">
                    <div class="option" id="hideAppName">
                        <div class="oLable">Hide app name</div>
                        <switch class="inp" />
                    </div>
                    <div class="option" id="Transparencity">
                        <div class="oLable">Transparencity</div>
                        <switch class="inp" />
                    </div>
                    <div class="option" id="BackgroundColor">
                        <div class="oLable">Background Color</div>
                        <div class="inp colorpicker"></div>
                    </div>
                    <div class="option" id="BackgroundImage">
                        <div class="oLable">Background Image</div>
                        <switch class="inp" />
                    </div>
                    <div class="option" id="ErrorHighlite">
                        <div class="oLable">Error Highlite</div>
                        <div class="inp colorpicker"></div>
                    </div>
                    <div class="option" id="VariableHighlite">
                        <div class="oLable">Variable Highlite</div>
                        <div class="inp colorpicker"></div>
                    </div>
                    <div class="option" id="SuperLineHighlite">
                        <div class="oLable">SuperLine Highlite</div>
                        <div class="inp colorpicker"></div>
                    </div>
                    <div class="option" id="FontSize">
                        <div class="oLable">Font Size</div>
                        <span class="inp numInput">
                            <span class="rUpB"><img src="left-arrow.png" /></span>
                            <input type="number" step="0.5" value="18"><!-- add input corection-->
                            <span class="rDwnB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>
                    <div class="option" id="LinePadding">
                        <div class="oLable oLong">Padding Between Lines</div>
                        <span class="inp numInput">
                            <span class="rUpB"><img src="left-arrow.png" /></span>
                            <input type="number" step="0.5" value="2"><!-- add input corection-->
                            <span class="rDwnB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="tabArea" id="interfaceTab">

            </div>
            <div class="tabArea" id="systemTab">
                <div id="settingsArea">
                    <div class="option">
                        <div class="oLable">Counting On Line End</div>
                        <switch />
                    </div>
                    <div class="option">
                        <div class="oLable">All lines Are Superines</div>
                        <switch />
                    </div>
                    <div class="option">
                        <div class="oLable">Show Line Numbers</div>
                        <switch />
                    </div>
                    <div class="option">
                        <div class="oLable">Click To Copy</div>
                        <switch />
                    </div>
                </div>
            </div>

            <div class="tabArea" id="variablesTab">
                <div class="tabAreaCentred">
                    <div class="var">
                        <div class="name">PI</div>
                        <div class="value">3.141592</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">sqrtTwo</div>
                        <div class="value">1.41421</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">minutes</div>
                        <div class="value">SYSTEM-RELATED</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">seconds</div>
                        <div class="value">SYSTEM-RELATED</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                </div>
                <img id="varAddBTN" src="add.svg"></img>
                <img id="varAddBTN" src="save.svg"></img>
            </div>

            <div class="tabArea" id="functionsTab">
                <div class="tabAreaCentred">
                    <div class="var">
                        <div class="name">sqrt</div>
                        <div class="inputs">1</div>
                        <div class="value">SYSTEM-RELATED</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">minToH</div>
                        <div class="inputs">2</div>
                        <div class="value">round(A/60) + B </div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">minToH</div>
                        <div class="inputs">1</div>
                        <div class="value">round(A/60) </div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                </div>
                <img id="varAddBTN" src="add-variable.svg"></img>
                <img id="varAddBTN" src="save.svg"></img>
            </div>
        </div>

        <div class="tabArea" id="feedbackTab">
            <input type="text" id="TopicName" class="inputElement" placeholder="*Topic Name"></input>
            <textarea type="text" id="TopicContent" class="inputElement" placeholder="*Topic.."></textarea>
            <input type="text" id="Email" class="inputElement" value="@" placeholder="Email"></input>
            <div id="TopicImage">+ Add Image</div>
            <div id="TopicSendButton">Send</div>
        </div>

        <div class="tabArea" id="updatesTab">
            <div id="uptudateBanner">
                <img src="update.svg" />
                <div class="msg">APP Is Up To Date</div>
                <div class="version">v0.1</div>
            </div>
            <div id="versionChangelog">
                <div id="versionTitle">
                    <div class="version">0.01</div>
                    <div class="type">RELEASE</div>
                </div>
                <div id="versionLog">
                    App first released
                    + superLines
                    + variables
                </div>
            </div>
        </div>


    </div>
</body>
</html>