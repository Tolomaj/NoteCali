<html custom-frame=solid-with-shadow window-icon="icon.ico" window-resizable>
<head>
    <title>noteCali settings</title>
    <link rel="stylesheet" type="text/css" href="settings.css" />

    <script src="tooltipsAndMenuButtons.js"></script>
    <script src="colorPicker.js"></script>
    <script src="inputElements.js"></script>

    <script>
        function loadVariables(variableLines) {
            var varArr = variableLines.split(';');
            var vararea = document.getElementById("varArea");
            vararea.innerHTML = '<div class="var"><div class="name">system : pi</div><div class="value">3.141...</div></div><div class="var"><div class="name">system : e</div><div class="value">2.718...</div></div>'
            for (let i = 0; i < varArr.length; i = i + 2) {
                vararea.innerHTML += '<div class="var"> <div class="name">' + varArr[i] + '</div> <div class="value">' + varArr[i + 1] + '</div> <!--<img class="destroy" src="trash.svg"></img>--> </div>'; // trashcan icon is comemnted
            }
        }
        document.getElementById("varAddBTN").onclick = function () {
            Window.this.SettingsWin.openFile("constants.nConst");
        }
        document.getElementById("varLoadBTN").onclick = function () {
            Window.this.SettingsWin.reloadVariables();
        }

    </script>

</head>
<body>
    <div id="titleBar" role="window-caption">
        <div id="titleName">NoteCali Settings</div>
        <button id="closeB"><img src="close.svg" /></button>
    </div>
    <div id="pickerSelection">
        <div id="ColorPicker">
            <div id="colorTop">
                <div id="rss">
                    <div class="colorPrewContainer">
                        <div class="colorPrewBackground"></div>
                        <div id="colorPrew"></div>
                    </div>
                    <input type="text" id="colorTInput"></input>
                    <input type="hslider" id="transparencitySlider" max="100" value="100" step="1" />
                </div>
                <div id="lss">
                    <div class="gradientPicker">
                        <div id="bcg"></div>
                        <div id="fg"></div>
                        <div id="sg">
                            <div id="dragDot"></div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="hslider" id="hueSlider" max="359" value="180" step="1" />
            <div id="btnBottom">
                <button id="pickingSave">Save</button>
                <button id="pickingCanceled">Cancel</button>
            </div>
        </div>
    </div>

    <div id="botomSection">
        <div id="categoriMenu">
            <img id="styleIcon" src="filter.svg" />
            <button class="tabButton selected " id="styleBtn">
                <img src="color-palette.svg" />
                <div class="CLabel">Style</div>
            </button>
            <button class="tabButton" id="systemBtn">
                <img src="gear.svg" />
                <div class="CLabel">System</div>
            </button>
            <button class="tabButton" id="variableBtn">
                <img src="variable.svg" />
                <div class="CLabel">Variables</div>
            </button>
            <button class="tabButton" id="functionBtn" style="display:none">
                <!-- hide from menu -->
                <img src="functions.svg" />
                <div class="CLabel">Functions</div>
            </button>
            <button class="tabButton" id="interfaceBtn">
                <img src="keyboard.svg" />
                <div class="CLabel">Interface</div>
            </button>

            <div id="bottomMenu">
                <button class="tabButton" id="feedbackBtn" style="display:none">
                    <!-- hide from menu -->
                    <img src="feedback.svg" />
                    <div class="CLabel">FeedBack</div>
                </button>
                <button class="tabButton" id="updatesBtn">
                    <img src="update.svg" />
                    <div class="CLabel">Updates</div>
                </button>
            </div>
        </div>

        <div id="tabWithToolTip">
            <div id="toolTip" class="toolTip">
                <div class="header">Style</div>
                <div class="tip">Here is style settings</div>
            </div>

            <div class="tabArea" id="styleTab">
                <div class="styleType">
                    <button class="categoryButton hasTip" value="0" tip="Default mode defined by windows setting">AUTO</button>
                    <button class="categoryButton hasTip" value="1" tip="Forced light mode">LIGHT</button>
                    <button class="categoryButton hasTip" value="2" tip="Forced dark mode">DARK</button>
                    <button class="categoryButton hasTip" value="3" tip="Set your own style">CUSTOM</button>
                </div>
                <div id="settingsArea" style="height: calc(100% - 60px);">
                    <div class="option hasTip" tip="Position of dividing line in %">
                        <div class="oLable">Line Position</div>
                        <span class="inp numInput">
                            <span class="rDwnB"><img src="left-arrow.png" /></span>
                            <input class="inp" type="number" step="1" value="0" max="100" min="0" id="dividerLinePosINP"><!-- id = variableName + "INP" -->
                            <span class="rUpB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>

                    <div class="option hasTip" tip="Size of font.">
                        <div class="oLable">Font Size</div>
                        <span class="inp numInput">
                            <span class="rDwnB"><img src="left-arrow.png" /></span>
                            <input class="inp" type="number" step="0.5" value="18" max="100" min="2" id="fontSizeINP"><!-- id = variableName + "INP" -->
                            <span class="rUpB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>
                    <div class="option hasTip" tip="Just hide app name.">
                        <div class="oLable">Show app name</div>
                        <switch class="inp" id="showAppNameSW" /> <!-- showAppName + SW -->
                    </div>

                    <div class="option customPa hasTip" tip="Set background color.">
                        <div class="oLable">Background Color</div>
                        <div class="inp colorpicker" id="backgroudColorCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Set color of divider line.">
                        <div class="oLable">DividerLine Color</div>
                        <div class="inp colorpicker" id="dividerLineColorCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Set text color.">
                        <div class="oLable">Text color</div>
                        <div class="inp colorpicker" id="fontColorCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Set color of solutions.">
                        <div class="oLable">Solution Color</div>
                        <div class="inp colorpicker" id="solutionFontColorCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Set title color.">
                        <div class="oLable">Title color</div>
                        <div class="inp colorpicker" id="titleColorCLR"></div>
                    </div>
                    <!-- not implemented !!
                                        <div class="option customPa hasTip" tip="Allow transparencity for background color. Transparencity level is driven by backgroundColor property.">
                    <div class="oLable">Transparencity</div>
                    <span class="inp numInput">
                        <span class="rDwnB"><img src="left-arrow.png" /></span>
                        <input class="inp" type="number" step="1" value="100" max="100" min="0" id="transparencityINP">
                                <span class="rUpB"><img src="right-arrow.png" /></span>
                                </span>
                            </div>
                                    <div class="option customPa hasTip" settingName="backgroundImage" tip="Image used for background. <br> <span style='color:#c21111;'>!solid color is always faster that image!<span>">
                        <div class="oLable">Background Image</div>
                        <switch class="inp" />
                    </div>
                    <div class="option customPa hasTip" tip="Color of error highliting">
                        <div class="oLable">Error Highlite</div>
                        <div class="inp colorpicker" id="highliteERRCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Color of variable highliting.">
                        <div class="oLable">Variable Highlite</div>
                        <div class="inp colorpicker" id="highliteVARCLR"></div>
                    </div>
                    <div class="option customPa hasTip" tip="Color used for highliting superline if is turned off all lines are superlines.">
                        <div class="oLable">SuperLine Highlite</div>
                        <div class="inp colorpicker" id="highliteSUPERCLR"></div>
                    </div>
                        <div class="option customPa hasTip">
                            <div class="oLable oLong">Padding Between Lines</div>
                            <span class="inp numInput">
                                <span class="rDwnB"><img src="left-arrow.png" /></span>
                                <input class="inp" type="number" step="0.5" value="2" id="fontPaddingINP">
                                <span class="rUpB"><img src="right-arrow.png" /></span>
                                </span>
                            </div>-->
                </div>
            </div>

            <div class="tabArea" id="interfaceTab">
                <div class="feature"> <div class="name">€[lineNumber]</div> <div class="value">Pointer to line</div> </div>
                <div class="feature"> <div class="name">5m + 6mm to cm</div> <div class="value">Unit conversion example</div> </div>
                <div class="feature"> <div class="name">;sum</div>        <div class="value">Sum all the numbers above</div> </div>
                <div class="feature"> <div class="name">&0010 </div>      <div class="value">Using biar numbers</div> </div>
                <div class="feature"> <div class="name">#ab1</div>        <div class="value">Using hexadecimal numbers</div> </div>
                <div class="feature"> <div class="name">%</div>           <div class="value">Operation percent</div> </div>
                <div class="feature"> <div class="name">^</div>           <div class="value">Operation power</div> </div>
                <div class="feature"> <div class="name">*</div>           <div class="value">Operation multiply</div> </div>
                <div class="feature"> <div class="name">/</div>           <div class="value">Operation div</div> </div>
                <div class="feature"> <div class="name">+</div>           <div class="value">Operation add</div> </div>
                <div class="feature"> <div class="name">-</div>           <div class="value">Operation sub</div> </div>
                <div class="feature"> <div class="name"><</div>           <div class="value">Operation lower</div> </div>
                <div class="feature"> <div class="name">></div>           <div class="value">Operation greater</div> </div>
                <div class="feature"> <div class="name"><=</div>          <div class="value">Operation lower or equal</div> </div>
                <div class="feature"> <div class="name">>=</div>          <div class="value">Operation greater or equal</div> </div>
                <div class="feature"> <div class="name">==</div>          <div class="value">Operation equal</div> </div>
                <div class="feature"> <div class="name">!=</div>          <div class="value">Operation not equal</div> </div>
                <div class="feature"> <div class="name">&&</div>          <div class="value">Operation and</div> </div>
                <div class="feature"> <div class="name">||</div>          <div class="value">Operation or</div> </div>
                <div class="feature"> <div class="name">sin(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">cos(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">tan(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">cot(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">degtodeg(x)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">degtorad(x)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">degtorad(x)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">radtodeg(x)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">asin(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">acos(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">atan(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">acot(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">sinh(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">cosh(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">tanh(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">coth(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">asinh(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">acosh(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">atanh(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">acoth(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">ln(x)</div>        <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">log(x,base)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">exp(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">abs(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">sgn(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">round(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">int(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">ceil(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">floor(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">frac(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">factorial(x)</div> <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">gamma(x)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">sqrt(x)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">root(x,index)</div><div class="value">Function</div> </div>
                <div class="feature"> <div class="name">mod(x,y)</div>     <div class="value">Function Modulo</div> </div>
                <div class="feature"> <div class="name">if(cond,t,f)</div> <div class="value">If condition 1:t 0:f</div> </div>
                <div class="feature"> <div class="name">or(x,y)</div>      <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">and(x,y)</div>     <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">not(x)</div>       <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">bitor(x,y)</div>   <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">bitand(x;y)</div>  <div class="value">Function</div> </div>
                <div class="feature"> <div class="name">bitxor(x,y)</div>  <div class="value">Function</div> </div>

                <div class="feature"> <div class="name">;clear</div>    <div class="value">Clear text in calculator</div> </div>
                <div class="feature"> <div class="name">;rand</div>     <div class="value">Random number 0 to 1</div> </div>
                <div class="feature"> <div class="name">;randi</div>     <div class="value">Random integer </div> </div>
                <div class="feature"> <div class="name">;randn</div>     <div class="value">Random number -1 - 1 </div> </div>

                <div class="feature"> <div class="name">r[x];</div>     <div class="value">before line change rouonding settings for line</div> </div>
                <div class="feature"> <div class="name">b[x];</div>     <div class="value">before line change number base settings for line</div> </div>
                <div class="feature"> <div class="name">c;</div>        <div class="value">before line prevent line from solving</div> </div>

                <div class="feature"> <div class="name">CTRL + F</div>  <div class="value">Flush all text from calculator</div> </div>

            </div>
            <div class="tabArea" id="systemTab">
                <div id="settingsArea">
                    <!-- not done ! <div class="option">
                        <div class="oLable">Counting On Line End</div>
                        <switch class="inp" id="countingOnLineEndSW" />
                    </div>
                    <div class="option">
                        <div class="oLable">All lines Are Superines</div>
                        <switch class="inp" id="isAllLinesSuperlinesSW" />
                    </div>
                    <div class="option">
                        <div class="oLable">Show Line Numbers</div>
                        <switch class="inp" id="showLineNumbersSW" />
                    </div>-->
                    <div class="option hasTip" tip="Default count of deciaml places.">
                        <div class="oLable">Round to</div>
                        <span class="inp numInput">
                            <span class="rDwnB"><img src="left-arrow.png" /></span>
                            <input class="inp" type="number" step="1" value="3" max="25" min="0" id="roundToDecINP"><!-- id = variableName + "INP" -->
                            <span class="rUpB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>

                    <div class="option hasTip" tip="Grouping numbers to groups 123 456.<br> 0 means no grouping">
                        <div class="oLable">Group by</div>
                        <span class="inp numInput">
                            <span class="rDwnB"><img src="left-arrow.png" /></span>
                            <input class="inp" type="number" step="1" value="0" max="10" min="0" id="numberGroupingINP"><!-- id = variableName + "INP" -->
                            <span class="rUpB"><img src="right-arrow.png" /></span>
                        </span>
                    </div>

                    <div class="option hasTip" tip="Use 1.23E+10 format of numbers">
                        <!-- variable in c++ name-->
                        <div class="oLable">Use Sience Numbers</div>
                        <switch class="inp" id="useSientificSW" />
                    </div>

                    <div class="option hasTip" tip="Use line arguments before ;<br>For example r3; this round number to 3 dec places.">
                        <!-- variable in c++ name-->
                        <div class="oLable">Use lineModifiers</div>
                        <switch class="inp" id="useLineModifiersSW" />
                    </div>

                    <div class="option hasTip" tip="Allow you to click and by that copy solution.">
                        <!-- variable in c++ name-->
                        <div class="oLable">Click To Copy</div>
                        <switch class="inp" id="clickToCopySW" />
                    </div>

                    <div class="option hasTip" tip="Uses radians for functions like sin()">
                        <!-- variable in c++ name-->
                        <div class="oLable">Use Radians</div>
                        <switch class="inp" id="useRadiansSW" /> <!-- add to variable list  -> setings-->
                    </div>
                    <div class="option hasTip" tip="See for example h same as H">
                        <!-- variable in c++ name-->
                        <div class="oLable">Ignore Leter Diference</div>
                        <switch class="inp" id="ignoreHightDiferenceSW" /> <!-- add to variable list  -> setings-->
                    </div>
                    <div class="option hasTip" tip="Shows Full Error on line (in major cases error is biget that working space)">
                        <!-- variable in c++ name-->
                        <div class="oLable">Show Error Text</div>
                        <switch class="inp" id="showErrTextSW" /> <!-- add to variable list  -> setings-->
                    </div>
                    <div class="option hasTip" tip="Allow using &0 comand <br> <span style='color:#516e78;'> &0 is pointer to first line<span>">
                        <!-- variable in c++ name-->
                        <div class="oLable">Line Jumps</div>
                        <switch class="inp" id="allowLineJumpSW" /> <!-- add to variable list  -> setings-->
                    </div>
                    <div class="option hasTip" tip="Define default metrics in whole calculator like m km cm dm.<br> Experimental feature">
                        <!-- variable in c++ name-->
                        <div class="oLable">Use Metrics</div>
                        <switch class="inp" id="useMetricsSW" /> <!-- add to variable list  -> setings-->
                    </div>

                    <div class="option hasTip" tip="If ( is not ended imaginar ) is added on formula end">
                        <!-- variable in c++ name-->
                        <div class="oLable">Parenthesis corection</div>
                        <switch class="inp" id="corectParenthesisSW" /> <!-- add to variable list  -> setings-->
                    </div>

                    <div class="option hasTip" tip="Round rules is not applied variables and € pointers.">
                        <!-- variable in c++ name-->
                        <div class="oLable">Dont Round Pointers</div>
                        <switch class="inp" id="useNoroundPointersSW" /> <!-- add to variable list  -> setings-->
                    </div>

                </div>
            </div>

            <div class="tabArea" id="variablesTab">
                <div class="tabAreaCentred" id="varArea">
                    <div class="var">
                        <div class="name">system : pi</div>
                        <div class="value">3.141...</div>
                    </div>
                    <div class="var">
                        <div class="name">system : e</div>
                        <div class="value">2.718...</div>
                    </div>
                </div>
                <img id="varAddBTN" src="pen.svg"></img>
                <img id="varLoadBTN" src="refresh.svg"></img>
            </div>
            <div class="tabArea" id="functionsTab">
                <div class="tabAreaCentred">
                    <div class="var">
                        <div class="name">sqrt</div>
                        <div class="inputs">1</div>
                        <div class="value">SYSTEM-RELATED</div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">minToH</div>
                        <div class="inputs">2</div>
                        <div class="value">round(A/60) + B </div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                    <div class="var">
                        <div class="name">minToH</div>
                        <div class="inputs">1</div>
                        <div class="value">round(A/60) </div>
                        <img class="destroy" src="trash.svg"></img>
                    </div>
                </div>
                <img id="varAddBTN" src="add-variable.svg"></img>
                <img id="varAddBTN" src="save.svg"></img>
            </div>
        </div>

        <div class="tabArea" id="feedbackTab">
            <input type="text" id="TopicName" class="inputElement" placeholder="*Topic Name"></input>
            <textarea type="text" id="TopicContent" class="inputElement" placeholder="*Topic.."></textarea>
            <input type="text" id="Email" class="inputElement" value="@" placeholder="Email"></input>
            <div id="TopicImage">+ Add Image</div>
            <div id="TopicSendButton">Send</div>
        </div>

        <div class="tabArea scrolableArea" id="updatesTab">


            <div id="uptudateBanner">
                <img src="update.svg" />
                <div class="msg">APP version</div>
                <div class="version">v0.3</div>
            </div>



            <div id="versionChangelog">
                <div id="versionTitle">
                    <div class="version">v0.3</div>
                    <div class="type">FULL RELEASE</div>
                </div>
                <div id="versionLog">
                    Now Variables And Line Pointers is not rounded (can be changed in settings).<br>	Recreated Aplication Icon.<br>	Still Auto Update is not awaiable in this version.<br>    And still you feedback is needed.<br>    Please send to email adress.<br>    <a href="mailto:vydrysekg@gmail.com?subject=NOTE_CALI_FEADBACK"> vydrysekg@gmail.com </a><br>
                </div>

                <div id="versionChangelog">
                    <div id="versionTitle">
                        <div class="version">v0.2</div>
                        <div class="type">FULL RELEASE</div>
                    </div>
                    <div id="versionLog">
                        Fixed variable bugs.<br>	Fixed Settings saving.<br>	Fixed operations containing '=' char.<br>	Now Settings is located in appData.<br>	Still Auto Update is not awaiable in this version.<br>	And still you feedback is needed.<br>	Please send to email adress.<br>	<a href="mailto:vydrysekg@gmail.com?subject=NOTE_CALI_FEADBACK"> vydrysekg@gmail.com </a><br>
                    </div>

                    <div id="versionChangelog">
                        <div id="versionTitle">
                            <div class="version">v0.1 </div>
                            <div class="type"> FULL RELEASE</div>
                        </div>
                        <div id="versionLog">
                            App first released.<br>	Auto Update is not awaiable in this version.<br>	Please aend feedback to email adress.<br>	<a href="mailto:vydrysekg@gmail.com?subject=NOTE_CALI_FEADBACK"> vydrysekg@gmail.com </a><br>
                        </div>
                       
                    </div>


                </div>
</body>
</html>